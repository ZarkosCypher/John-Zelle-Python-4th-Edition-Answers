1) Write a program to calculate the volume and surface area of a sphere from its radius, given as input. Here are some formulas that might be useful:
V = 4/3Trr3
A = 4Tr2

2) Write a program that calculates the cost per square inch of a circular pizza,
given its diameter and price. The formula for area is A = mr2.

3) Write a program that computes the molecular weight of a carbohydrate (in grams per mole) based on the number of hydrogen, carbon, and oxygen atoms in the molecule. The program should prompt the user to enter the number of hydrogen atoms, the number of carbon atoms, and the number of oxygen atoms. The program then prints the total combined molecular weight of all the atoms based on these individual atom weights:
Atom
Weight
(grams / mole)
H
C
1.00794
12.0107
15.9994
For example, the molecular weight of water (H2O) is: 2(1.00794) +
15.9994 = 18.01528.

4) Write a program that determines the distance to a lightning strike based on the time elapsed between the flash and the sound of thunder. The speed of sound is approximately 1100 ft/sec and 1 mile is 5280 ft.

5) The Konditorei coffee shop sells coffee at $15.50 a pound plus the cost of shipping. Each order ships for $0.99 per pound + $4.50 fixed cost for overhead. Write a program that calculates the cost of an order.

6) Two points in a plane are specified using the coordinates (x1,y1) and (x2,y2). Write a program that calculates the slope of a line through two (non-vertical) points entered by the user.
y2 - y1
slope =
x2 - x1

7) Write a program that accepts two points (see previous problem) and determines the distance between them.
distance = V (x2 - x1)2 + (y2 - y1)2

8) The Gregorian epact is the number of days between January I8t and the previous new moon. This value is used to figure out the date of Easter. It is calculated by these formulas (using int arithmetic):
C = year//100
epact = (8 + (C/ - C + ((8C + 13) / /25) + 11(year%19)) 11(yea—Ç%19))%30
85
puts the value of the epact.
Write a program that prompts the user for a four-digit year and then out-

9) Write a program to calculate the area of a triangle given the length of its three sides-a, b, and c-using these formulas:
s = a + 6+ c
2
A = Vs(s - a)(s - b)(s - c)

10) Write a program to determine the length of a ladder required to reach a given height when leaned against a house. The height and angle of the ladder are given as inputs. To compute length use:
length = -
height sin angle
Note: The angle must be in radians. Prompt for an angle in degrees and use this formula to convert:
TT
radians = -
180
degrees

11) Write a program to find the sum of the first n natural numbers, where the value of n is provided by the user.

12) Write a program to find the sum of the cubes of the first n natural numbers where the value of n is provided by the user.

13) Write a program to sum a series of numbers entered by the user. The program should first prompt the user for how many numbers are to be summed. The program should then prompt the user for each of the numbers in turn and print out a total sum after all the numbers have been entered. Hint: Use an input statement in the body of the loop.

14) Write a program that finds the average of a series of numbers entered by the user. As in the previous problem, the program will first ask the user how many numbers there are.

15) Write a program that approximates the value of pi by summing the terms of this series: 4/1 - 4/3 + 4/5 - 4/7 + 4/9 - 4/11 + ... The program should prompt the user for n, the number of terms to sum, and then output the sum of the first n terms of this series. Have your program subtract the approximation from the value of math. pi to see how accurate it is.

16) A Fibonacci sequence is a sequence of numbers where each successive number is the sum of the previous two. The classic Fibonacci sequence begins: 1, 1, 2, 3, 5, 8, 13, .... Write a program that computes the nth Fibonacci number where n is a value input by the user. For example, if
n = 6, then the result is 8. Hints: Consider this an accumulator loop that
always tracks the current value and the previous value. Start these both at 1 (the first two values of the sequence). Use simultaneous assignment to set the next values of these two variables each time around the loop.

17) You have seen that the math library contains a function that computes the square root of numbers. In this exercise, you are to write your own algorithm for computing square roots. One way to solve this problem is to use a guess-and-check approach. You first guess what the square root might be, and then see how close your guess is. You can use this information to make another guess and continue guessing until you have found the square root (or a close approximation to it). One particularly good way of making guesses is to use Newton's method. Suppose x is the number we want the root of, and guess is the current guessed answer. The guess can be improved by computing the next guess as:
guess +
guess
2
Write a program that implements Newton's method. The program should prompt the user for the value to find the square root of (x) and the number of times to improve the guess. Starting with a guess value of x/2, your program should loop the specified number of times applying Newton's method and report the final value of guess. You should also subtract your estimate from the value of math. sqrt (x) to show how close it is.
